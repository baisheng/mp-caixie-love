<style lang="scss">
  @import "../../styles/variable";

  page{
    height: 100%;
    color: $color-primary;
    background: #f5f5f5;
  }
  body.c-home {
    color: $color-primary;
    height: 100%;
    width: 100%;
  }
  .c-tabbar {
    position: fixed;
    width: 100%;
    bottom: 0;
    height: rpx(120);
    border-top: 1px solid $color-border;
    display:flex;
    background: #fff;
    align-items:center;
  }
  .c-tabbar__tab {
    color: #1F1F1F;
    width: rpx(710);
    margin-left: rpx(20);
    background: #FFFFFF;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.10) inset, /*左边阴影*/
    0 2px 4px rgba(0, 0, 0, 0.20); /*右边阴影*/
    white-space: nowrap;
    .tab_item {
      display: flex;
      flex-flow: column;
      width: 33.33333%;
      text-align: center;
      align-content: center;
      align-items: center;
      padding: rpx(6);
      height: rpx(100);
      .icon {
        display: flex;
        width: rpx(60);
        height: rpx(60);
      }
      .icon-title {
        font-size: rpx(24);
      }
      .icon-active {
        color: #476DDC;
      }
    }
    .toolbar {
      display: flex;
    }
  }
  .c-toolbar {
    display: flex;
    flex-direction: row;
    padding: 0 rpx(40);
    align-items: center;
    width: 100%;
  }

  .c-placeholder {
    font-weight: 300;
  }
  .c-textarea {
    border: none;
    font-size: 16px;
    width: auto;
    font-weight: 300;
    height: 50px;
    margin: 10px 0 15px 15px;
  }
</style>
<template>
  <view class="o-page">
    <!--<view class="c-panel-title u-mt-medium">-->
      <!--新建或收藏最爱-->
    <!--</view>-->
    <view class="c-panel " style="height: 80px;position:relative;">
      <input
        class="c-textarea  font-weight: 300;"
        placeholder="{{placeholderText}}"
        placeholder-style="color: #c9c9c9;"
        focus="{{isFocus}}"
        @input="bindinput"
        @focus="bindfocus"
        @blur="bindblur"
        maxlength="20" />
      <view style="position:absolute;bottom: 0;right: 0;"
        class="u-c-gray u-float-right u-m-small u-text-tiny">剩余字数：{{20 - wordCount}}</view>
    </view>
    <view class="c-panel">
      <view class="c-cell c-cell--access">
        <view class="c-cell__bd">爱上它的时间</view>

          <picker mode="date" value="{{date}}" bindchange="listenerDatePickerSelected">
            <view class="c-cell__ft">
            <view class="picker">
              {{date}}
            </view>
            </view>
          </picker>
        </view>
      </view>
    </view>

    <view  wx:if="{{list.length > 0}}">
      <view class="c-panel-title u-mt-medium">
        类似的最爱
      </view>
      <view class="c-panel">
        <block wx:for-items="{{list}}"
               wx:for-index="index"
               wx:for-item="item"
               wx:key="id" @tap="tap({{item}})">
          <view class="c-cell c-cell--access" @tap="tap({{item}})">
            <image class="c-cell__icon u-icon-lg" mode="aspectFill" src="{{item.featured_image}}?imageMogr2/thumbnail/90x90/q/90/interlace/1"></image>
            <view class="c-cell__bd" style="width: 450rpx;">
              <Elip>{{item.title}}</Elip>
            </view>
            <view class="c-cell__ft u-text-mute">{{item.like_count}} 人最爱</view>
          </view>
        </block>
      </view>
    </view>

    <view class="c-tabbar {{isIpx?'fix-iphonex':''}} u-flex u-align-items-center u-justify-center">
      <button
        class="c-btn c-btn--primary c-btn--flat u-width-75 u-m-medium  {{isEmpty ? 'c-btn--disabled' : ''}}"
        disabled="{{isEmpty}}"
        @tap="postLove">
        备忘到我的最爱
      </button>

    </view>
    <view style="height: 160rpx;"></view>

</template>

<script>
  /* eslint-disable no-unused-vars,no-undef */
  import wepy from 'wepy'
  import Tips from '../../utils/Tips'
  import base from '../../mixins/_base'
  // import pagination from '../../mixins/pagination'
  import postsApi from '../../api/posts'
  const $wxapp = wepy.$instance
  import Elip from '../../components/ui/elip'
  import Cache from '../../utils/Cache'

  const date = new Date()
  const years = []
  const months = []
  const days = []

  for (let i = 1920; i <= date.getFullYear(); i++) {
    years.push(i)
  }

  for (let i = 1; i <= 12; i++) {
    months.push(i)
  }

  for (let i = 1; i <= 31; i++) {
    days.push(i)
  }

  export default class NewLove extends wepy.page {
    mixins = [base]

    components = {
      'Elip': Elip
    }

    data = {
      isIpx: $wxapp.globalData.isIpx,
      icon: '/images/icons/icon-flower--grey.svg',
      app: {},
      isFocus: true,
      list: [],
      title: '',
      page: {
        added: [],
        list: []
      },
      years: years,
      year: date.getFullYear(),
      months: months,
      month: 2,
      days: days,
      day: 2,
      // value: [9999, 1, 1],
      value: [date.getFullYear()],
      date: `${date.getFullYear()}-${date.getMonth()}-${date.getDay()}`,
      isCollapse: true,
      placeholderText: '备忘最爱，例如：上课睡觉☀️️'
    }
    config = {
      backgroundTextStyle: 'dark',
      navigationBarBackgroundColor: '#f5f5f5',
      navigationBarTextStyle: 'black',
      backgroundColor: '#F5f5f5',
      navigationBarTitleText: '备忘你的最爱️',
      // backgroundTextStyle: 'dark',
      enablePullDownRefresh: false
    }
    computed = {
      wordCount () {
        return this._wordCount(this.title)
      },
      now () {
        return +new Date()
      },
      isEmpty () {
        return this.title === '' || this.title === null
      }
    }
    methods = {
      tapToggle (e) {
        this.isCollapse = !this.isCollapse
        this.$apply()
      },
      tap(item) {
        this.$root.$navigate(`/pages/love?id=${item.id}`)
      },
      bindinput (e) {
        this.title = this.checkString(e.detail.value)
        this.$apply()
        if (!this.isEmpty) {
          $wxapp.emitter.emit('change', this.title)
        }
      },
      bindfocus(e) {
        this.isFocus = true
        // this.$apply()
      },
      bindblur() {
        this.isFocus = false
      },
      async postLove() {
        const data = await postsApi.newLove(this.title, this.date)
        this.loaded()
        if (data) {
          Tips.success('添加成功')
          $wxapp.emitter.emit('newlove_added', data)
          this.$redirect('/pages/love', {id: data.id})
        } else {
          Tips.error('添加失败')
        }
      },
      bindChange: function(e) {
        const val = e.detail.value
        this.year = this.years[val[0]]
        this.$apply()
      },
      /**
       * 监听日期picker选择器
       */
      listenerDatePickerSelected(e) {
        this.date = e.detail.value
        this.$apply()
      },
      bindDateChange: function(e) {
        console.log('picker发送选择改变，携带值为', e.detail.value)
        this.setData({
          date: e.detail.value
        })
      }
    }

    /**
     * 检查字符是否为特殊字符
     * @param value
     * @returns {string}
     */
    checkString(value) {
      const pattern = new RegExp("[\\s+,`~!@#$^&*+()=|{}':;',\\[\\].\\-<>/?~！@#￥%……&*（）——|{}【】‘；：”“'。，、？]")
      let rs = ''
      for (let i = 0; i < value.length; i++) {
        rs = rs + value.substr(i, 1).replace(pattern, '')
        // console.log(rs)
      }
      return rs
    }

    /**
     * 检查限制的字符数量
     * @param data
     * @returns {number}
     * @private
     */
    _wordCount (data) {
      const pattern = /[a-zA-Z0-9_\u0392-\u03c9\u0410-\u04F9]+|[\u4E00-\u9FFF\u3400-\u4dbf\uf900-\ufaff\u3040-\u309f\uac00-\ud7af]+/g

      const m = data.match(pattern)
      let count = 0
      if (m === null) {
        return count
      }
      for (let i = 0; i < m.length; i++) {
        if (m[i].charCodeAt(0) >= 0x4E00) {
          count += m[i].length
        } else {
          count += 1
        }
      }
      return count
    }
    events = {
    }
    getNowDate = () => {
      let date = new Date()
      const year = date.getFullYear()
      let month = date.getMonth() + 1
      let day = date.getDate()
      month = (month < 10 ? '0' + month : month)
      let currentDay = day >= 10 ? day : `0${day}`
      let currentDate = (`${year.toString()}-${month.toString()}-${currentDay}`)
      return currentDate
    }
    async onReady () {
      this.date = this.getNowDate()
      this.app = await Cache.app()
      this.placeholderText = this.app.options.placeholder
      this.loaded()
      this.isTips = $wxapp.globalData.auth.isTips === undefined ? true : $wxapp.globalData.auth.isTips
    }
    onLoad() {
      this.$root.$parent.emitter.on('change', async (value) => {
        this.list = await postsApi.search(value)
        this.loaded()
      })
    }
  }
</script>
