<style lang="scss">
  @import "../../styles/variable";

  page{
    height: 100%;
    background-color: #fff;
    color: $color-primary;
  }
  .o-page {
  }
  body.c-home {
    background: #fff;
    color: $color-primary;
    height: 100%;
    width: 100%;
  }
  .c-tabbar {
    position: fixed;
    width: 100%;
    bottom: 0;
    height: rpx(120);
    border-top: 1px solid $color-border;
    display:flex;
    background: #fff;
    align-items:center;
  }
  .c-tabbar__tab {
    color: #1F1F1F;
    width: rpx(710);
    border-radius: rpx(20);
    margin-left: rpx(20);
    background: #FFFFFF;
    box-shadow: 0 0 4px rgba(0, 0, 0, 0.10) inset, /*左边阴影*/
    0 2px 4px rgba(0, 0, 0, 0.20); /*右边阴影*/
    white-space: nowrap;
    .tab_item {
      display: flex;
      flex-flow: column;
      width: 33.33333%;
      text-align: center;
      align-content: center;
      align-items: center;
      padding: rpx(6);
      height: rpx(100);
      .icon {
        display: flex;
        width: rpx(60);
        height: rpx(60);
      }
      .icon-title {
        font-size: rpx(24);
      }
      .icon-active {
        color: #476DDC;
      }
    }
    .toolbar {
      display: flex;
    }
  }
  .c-toolbar {
    display: flex;
    flex-direction: row;
    padding: 0 rpx(40);
    align-items: center;
    width: 100%;
  }

  .c-card {
    border-bottom-right-radius: 32rpx;
    border-bottom-left-radius: 32rpx;
    box-shadow: 0 10px 30px 0 rgba(0,0,0,0.10);
    height:600rpx;
    width: auto;

    padding: 0rpx 48rpx 0;
  }
/*  .c-input{
    text-align: center;
    font-weight: 300;
    font-size: 48rpx;
    margin: 120rpx 0rpx 0rpx 0rpx;
    border-bottom: 2rpx solid gainsboro;
    height: 90rpx;
    color: #415A6B;
    &:hover{
      font-weight: 500;
    }
  }*/

  .c-card__title {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: flex-start;
    font-size: 68rpx;
    &.is-focus {
      font-weight: 300;
      color: rgba(31,31,31,0.30);
    }
  }
  .c-recommend {
    display: flex;
    width: 100%;
    height: 100%;
    align-items: flex-start;
    flex-wrap: wrap;
    flex-direction: row;
    padding-top: 60rpx;
  }
  .c-recommend__title {
    margin-left: 30rpx;
    margin-bottom: 20rpx;
  }
  .c-recommend-item {
    /*flex: 1;*/
    width: 100%;
    /*min-width: 300rpx;*/
    /*max-width: 680rpx;*/
    /*display: flex;*/
    padding: 0 30rpx 10rpx 30rpx;
  }
  .c-recommend-item__body {
    display: flex;
    height: 75rpx;
    background: rgba(255,255,255,0.19);
    /*box-shadow: 0 2px 20px 0 rgba(0,0,0,0.1);*/
    /*border-radius: 4px;*/
    border-bottom: 1px solid #F4F4F4;
    padding: 14rpx 30rpx 14rpx 14rpx;
    position: relative;
    align-items: center;
    flex-direction: row;
    justify-content: center;
    justify-items: center;
    vertical-align: center;
  }
  .c-recommend-item__title {
    font-size: 32rpx;
    font-weight: 300;
    line-height: 0;
    justify-content: center;
    justify-items: center;
    /*margin-top: 0;*/
    /*margin-bottom: 28rpx;*/
    margin-left: 24rpx;
    flex: 1;
    /*overflow: hidden;*/
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .c-recommend-item__detail {
    margin: 0 0 28rpx;
    font-size: 26rpx;
    font-weight: 400;
    color: rgba(31,31,31,0.50);
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    line-height: 1.0769231;
  }
  .c-recommend-item__cover{
    position: relative;
    border-radius: 6rpx;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: center center;

    width: 68rpx;
    height: 68rpx;
  }
  .c-card__footer {
    margin-top: 80rpx;
  }
  .c-card__action {
    display: flex;
    flex-direction: row;
    align-items: flex-start;
    &--primary {
      flex: 1;
      margin-left: 30rpx;
    }
  }
  .c-button {
    display: flex;
    background: #FFF;
    font-weight: bold;
    font-size: 28rpx;
    height: 80rpx;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    min-width: 160rpx;
    box-shadow: 0 0 1px 1px rgba(0,0,0,0.05), 0 2px 2px 0 rgba(0,0,0,0.10);
    border-radius: 4px;
  }
  .c-button--primary {
    color: #FFFFFF;
    width: rpx(450);
    background: $color-primary;
  }
  .c-button--second {
    color: $color-primary;
    background: #FFFFFF;
  }
  .c-new-card {
    box-shadow: 0 0 1px 1px rgba(0,0,0,0.05), 0 2px 2px 0 rgba(0,0,0,0.10);

    /*box-shadow: 0 2px 20px 0 rgba(0,0,0,0.1);*/
    /*-webkit-border-radius: 16rpx;*/
    /*-moz-border-radius: 16rpx;*/
    /*border-radius: 16rpx;*/
    /*box-shadow: 0 0 1px 1px rgba(0,0,0,0.05), 0 2px 2px 0 rgba(0,0,0,0.10);*/
  }
</style>
<template>
  <view class="o-page">
    <view class="c-stage c-new-card" style="margin: 40rpx;">
      <view class="c-stage__header u-flex u-justify-between" style="padding: 15rpx 0;">
        <c-filed :icon="icon">
          <input class="c-input"
                 style="width: auto; border: none;font-size: 36rpx;font-weight: 300;"
                 placeholder="写下你最爱的"
                 bindinput="bindinput"
                 bindfocus="bindfocus"
                 bindblur="bindblur"/>
        </c-filed>
      </view>

      <view class="c-stage__header u-flex u-justify-between" @tap="tapToggle" style="{{!isCollapse ? '' : 'border-bottom: 0;'}}">
        <view class="u-flex u-justify-between u-align-items-center">
          <image class="u-icon" mode="aspectFit" src="/images/icons/icon-time.svg"></image>
          <view class="u-ml-small u-text-small u-text-left">时间</view>
        </view>
        <view class="u-text-mute u-text-uppercase u-text-small u-mb-zero u-p-small">
          <text style="color: #47BAA4;">{{year}}</text> 年爱上
        </view>
          <image class="u-icon {{isCollapse ? 'u-icon--right' : 'u-icon--down'}}" mode="aspectFit" src="/images/icons/icon-arrow-down.svg"></image>
      </view>

      <view class="c-stage__panel c-stage__panel--mute animated fadeIn" wx:if="{{!isCollapse}}">
          <picker-view
            class="u-text-small"
            indicator-style="height: 48px;" style="width: 100%; height: 300rpx; text-align: center;" value="{{value}}" bindchange="bindChange">
            <picker-view-column>
              <view wx:for="{{years}}" wx:for-item="year" wx:key="{{year}}" style="line-height: 50px">{{year}}年</view>
            </picker-view-column>
          </picker-view>
      </view>
    </view>

    <view class="c-stage" wx:if="{{list.length > 0}}">
      <view class="c-stage__header u-flex u-justify-between"
            wx:for-items="{{list}}"
            wx:for-index="index"
            wx:for-item="item"
            wx:key="id" @tap="tap({{item}})">
        <view class="u-flex u-justify-between u-align-items-center">
          <image class="c-stage__icon" mode="aspectFill" src="{{item.featured_image}}"></image>
          <view class="u-text-mute u-text-uppercase u-text-small u-mb-zero u-p-small u-justify-start">
            {{item.title}}
          </view>
        </view>
        <image class="u-icon u-icon--right" mode="aspectFit" src="/images/icons/icon-arrow-down.svg"></image>
      </view>
    </view>

    <view class="c-tabbar {{isIpx?'fix-iphonex':''}}">
      <view class="c-toolbar u-justify-center">
        <button class="c-button c-button--primary"
              disabled="{{isEmpty}}"
              @tap="postLove">
              添加到最爱
        </button>
      </view>

    </view>
    <view style="height: 160rpx;"></view>

  </view>
</template>

<script>
  /* eslint-disable no-unused-vars,no-undef */
  import wepy from 'wepy'
  import Tips from '../../utils/Tips'
  import base from '../../mixins/_base'
  // import pagination from '../../mixins/pagination'
  import postsApi from '../../api/posts'
  const $wxapp = wepy.$instance
  import cFiled from '../../components/ui/c-field'

  const date = new Date()
  const years = []
  for (let i = 1920; i <= date.getFullYear(); i++) {
    years.push(i)
  }
  export default class NewLove extends wepy.page {
    mixins = [base]

    components = {
      'c-filed': cFiled
    }

    data = {
      isIpx: $wxapp.globalData.isIpx,
      icon: '/images/icons/icon-flower--grey.svg',
      isFocus: false,
      list: [],
      title: '',
      page: {
        added: [],
        list: []
      },
      years: years,
      year: date.getFullYear(),
      value: [date.getFullYear()],
      isCollapse: true
    }
    config = {
      // backgroundTextStyle: 'dark',
      enablePullDownRefresh: false
    }
    computed = {
      now () {
        return +new Date()
      },
      isEmpty () {
        return this.title === '' || this.title === null
      }
    }
    methods = {
      tapToggle (e) {
        this.isCollapse = !this.isCollapse
        this.$apply()
      },
      tap(item) {
        this.$root.$navigate(`/pages/love?id=${item.id}`)
      },
      bindinput (e) {
        this.title = this.checkString(e.detail.value)
        console.log(this.title)
        // if (!this.title === '' || !this.title === null) {}
        if (!this.isEmpty) {
          $wxapp.emitter.emit('change', this.title)
        }
      },
      bindfocus() {
        this.isFocus = true
        this.$apply()
      },
      bindblur() {
        this.isFocus = false
      },
      async postLove() {
        const data = await postsApi.newLove(this.title, this.year)
        this.loaded()
        if (data) {
          Tips.success('添加成功')
          this.$redirect('/pages/love', {id: data.id})
        } else {
          Tips.error('添加失败')
        }
      },
      bindChange: function(e) {
        const val = e.detail.value
        this.year = this.years[val[0]]
        this.$apply()
      },
      /**
       * 监听日期picker选择器
       */
      listenerDatePickerSelected(e) {
        this.date = e.detail.value
        this.$apply()
      }
    }

    /**
     * 检查字符是否为特殊字符
     * @param value
     * @returns {string}
     */
    checkString(value) {
      const pattern = new RegExp("[`~!@#$^&*+()=|{}':;',\\[\\].\\-<>/?~！@#￥%……&*（）——|{}【】‘；：”“'。，、？]")
      let rs = ''
      for (let i = 0; i < value.length; i++) {
        rs = rs + value.substr(i, 1).replace(pattern, '')
        console.log(rs)
      }
      return rs
    }
    events = {
    }

    onLoad() {
      this.$root.$parent.emitter.on('change', async (value) => {
        this.list = await postsApi.search(value)
        this.loaded()
      })
    }
  }
</script>
